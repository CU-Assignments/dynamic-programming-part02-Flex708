class Solution {
public:
    map<int,char>m;
    //set<string>st;
    int dp[105];
    int f(int i,string s){
        if(i > s.length()) return INT_MIN/2;
        if(i == s.length()){
            return 1;
        }
        if(dp[i]!=-1) return dp[i];
        int take1=0,take2=0;
        // take1 means take only 1 character
        if(m.find(s[i]-'0')!=m.end()){
            take1=f(i+1,s);
        }
        if(i+2<=s.length()){
            string l = s.substr(i,2);
            if(l[0]!='0'){
                int x = stoi(l);
            if(m.find(x)!=m.end()){
                take2=f(i+2,s);
            }
            } 
            
        }
        
         return dp[i]=max(0,take1)+max(0,take2);
    }
    int numDecodings(string s) {
        for(int i=1;i<=26;i++){
            m[i]='A'+i-1;
        }
        memset(dp,-1,sizeof(dp));
        return f(0,s);

        return 0;
    }
};
