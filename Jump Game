class Solution {
  
public:
    bool canJump(vector<int>& arr) {
        int n = arr.size();
        vector<bool> dp(n, false); // dp[i] -> Can we reach the last index from i?
        dp[n - 1] = true; // Base case: Last index can always reach itself
        
        for (int i = n - 2; i >= 0; i--) {
            int maxJump = min(i + arr[i], n - 1); // Limit within bounds
            for (int j = i + 1; j <= maxJump; j++) {
                if (dp[j]) { // If any position ahead is reachable
                    dp[i] = true;
                    break; // No need to check further
                }
            }
        }
        
        return dp[0];
    }
};
